/* Generated by Yosys 0.7 (git sha1 61f6811, i686-w64-mingw32.static-gcc 4.9.3 -Os) */

(* src = "StrALU.v:33" *)
module ADDER(a, b, c, w);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  wire _196_;
  wire _197_;
  wire _198_;
  wire _199_;
  wire _200_;
  wire _201_;
  wire _202_;
  wire _203_;
  wire _204_;
  wire _205_;
  wire _206_;
  wire _207_;
  wire _208_;
  wire _209_;
  wire _210_;
  wire _211_;
  wire _212_;
  wire _213_;
  wire _214_;
  wire _215_;
  wire _216_;
  wire _217_;
  wire _218_;
  wire _219_;
  wire _220_;
  wire _221_;
  wire _222_;
  wire _223_;
  wire _224_;
  wire _225_;
  wire _226_;
  wire _227_;
  wire _228_;
  wire _229_;
  wire _230_;
  wire _231_;
  wire _232_;
  wire _233_;
  wire _234_;
  wire _235_;
  wire _236_;
  wire _237_;
  wire _238_;
  wire _239_;
  wire _240_;
  wire _241_;
  wire _242_;
  wire _243_;
  wire _244_;
  wire _245_;
  wire _246_;
  wire _247_;
  wire _248_;
  wire _249_;
  wire _250_;
  wire _251_;
  wire _252_;
  wire _253_;
  wire _254_;
  wire _255_;
  wire _256_;
  wire _257_;
  wire _258_;
  wire _259_;
  wire _260_;
  wire _261_;
  wire _262_;
  wire _263_;
  wire _264_;
  wire _265_;
  wire _266_;
  wire _267_;
  wire _268_;
  wire _269_;
  wire _270_;
  wire _271_;
  wire _272_;
  wire _273_;
  wire _274_;
  wire _275_;
  wire _276_;
  wire _277_;
  wire _278_;
  wire _279_;
  wire _280_;
  wire _281_;
  wire _282_;
  wire _283_;
  wire _284_;
  wire _285_;
  wire _286_;
  wire _287_;
  wire _288_;
  wire _289_;
  wire _290_;
  wire _291_;
  wire _292_;
  wire _293_;
  wire _294_;
  wire _295_;
  wire _296_;
  wire _297_;
  wire _298_;
  wire _299_;
  wire _300_;
  wire _301_;
  wire _302_;
  (* src = "StrALU.v:33" *)
  input [15:0] a;
  (* src = "StrALU.v:33" *)
  input [15:0] b;
  (* src = "StrALU.v:33" *)
  input c;
  (* src = "StrALU.v:33" *)
  output [15:0] w;
  NOT _303_ (
    .A(_229_),
    .Y(_241_)
  );
  NAND _304_ (
    .A(_076_),
    .B(_075_),
    .Y(_242_)
  );
  NOT _305_ (
    .A(_075_),
    .Y(_243_)
  );
  NOT _306_ (
    .A(_076_),
    .Y(_244_)
  );
  NAND _307_ (
    .A(_244_),
    .B(_243_),
    .Y(_245_)
  );
  NAND _308_ (
    .A(_245_),
    .B(_242_),
    .Y(_247_)
  );
  NOR _309_ (
    .A(_247_),
    .B(_241_),
    .Y(_249_)
  );
  NOR _310_ (
    .A(_244_),
    .B(_243_),
    .Y(_251_)
  );
  NOR _311_ (
    .A(_076_),
    .B(_075_),
    .Y(_252_)
  );
  NOR _312_ (
    .A(_252_),
    .B(_251_),
    .Y(_253_)
  );
  NOR _313_ (
    .A(_253_),
    .B(_229_),
    .Y(_255_)
  );
  NOR _314_ (
    .A(_255_),
    .B(_249_),
    .Y(_235_)
  );
  NOR _315_ (
    .A(_249_),
    .B(_251_),
    .Y(_256_)
  );
  NOR _316_ (
    .A(_254_),
    .B(_239_),
    .Y(_257_)
  );
  NAND _317_ (
    .A(_254_),
    .B(_239_),
    .Y(_258_)
  );
  NOT _318_ (
    .A(_258_),
    .Y(_259_)
  );
  NOR _319_ (
    .A(_259_),
    .B(_257_),
    .Y(_260_)
  );
  NOT _320_ (
    .A(_260_),
    .Y(_262_)
  );
  NOR _321_ (
    .A(_262_),
    .B(_256_),
    .Y(_264_)
  );
  NAND _322_ (
    .A(_253_),
    .B(_229_),
    .Y(_266_)
  );
  NAND _323_ (
    .A(_266_),
    .B(_242_),
    .Y(_267_)
  );
  NOR _324_ (
    .A(_260_),
    .B(_267_),
    .Y(_268_)
  );
  NOR _325_ (
    .A(_268_),
    .B(_264_),
    .Y(_077_)
  );
  NOR _326_ (
    .A(_264_),
    .B(_259_),
    .Y(_269_)
  );
  NOR _327_ (
    .A(_106_),
    .B(_091_),
    .Y(_271_)
  );
  NAND _328_ (
    .A(_106_),
    .B(_091_),
    .Y(_273_)
  );
  NOT _329_ (
    .A(_273_),
    .Y(_275_)
  );
  NOR _330_ (
    .A(_275_),
    .B(_271_),
    .Y(_276_)
  );
  NOT _331_ (
    .A(_276_),
    .Y(_277_)
  );
  NOR _332_ (
    .A(_277_),
    .B(_269_),
    .Y(_278_)
  );
  NAND _333_ (
    .A(_260_),
    .B(_267_),
    .Y(_279_)
  );
  NAND _334_ (
    .A(_279_),
    .B(_258_),
    .Y(_280_)
  );
  NOR _335_ (
    .A(_276_),
    .B(_280_),
    .Y(_281_)
  );
  NOR _336_ (
    .A(_281_),
    .B(_278_),
    .Y(_145_)
  );
  NOR _337_ (
    .A(_278_),
    .B(_275_),
    .Y(_283_)
  );
  NOT _338_ (
    .A(_155_),
    .Y(_285_)
  );
  NOT _339_ (
    .A(_166_),
    .Y(_287_)
  );
  NOR _340_ (
    .A(_287_),
    .B(_285_),
    .Y(_288_)
  );
  NOR _341_ (
    .A(_166_),
    .B(_155_),
    .Y(_289_)
  );
  NOR _342_ (
    .A(_289_),
    .B(_288_),
    .Y(_290_)
  );
  NOT _343_ (
    .A(_290_),
    .Y(_292_)
  );
  NOR _344_ (
    .A(_292_),
    .B(_283_),
    .Y(_294_)
  );
  NAND _345_ (
    .A(_276_),
    .B(_280_),
    .Y(_296_)
  );
  NAND _346_ (
    .A(_296_),
    .B(_273_),
    .Y(_297_)
  );
  NOR _347_ (
    .A(_290_),
    .B(_297_),
    .Y(_298_)
  );
  NOR _348_ (
    .A(_298_),
    .B(_294_),
    .Y(_213_)
  );
  NOR _349_ (
    .A(_294_),
    .B(_288_),
    .Y(_299_)
  );
  NOR _350_ (
    .A(_228_),
    .B(_223_),
    .Y(_300_)
  );
  NAND _351_ (
    .A(_228_),
    .B(_223_),
    .Y(_301_)
  );
  NOT _352_ (
    .A(_301_),
    .Y(_302_)
  );
  NOR _353_ (
    .A(_302_),
    .B(_300_),
    .Y(_078_)
  );
  NOT _354_ (
    .A(_078_),
    .Y(_080_)
  );
  NOR _355_ (
    .A(_080_),
    .B(_299_),
    .Y(_082_)
  );
  NOT _356_ (
    .A(_288_),
    .Y(_084_)
  );
  NAND _357_ (
    .A(_290_),
    .B(_297_),
    .Y(_085_)
  );
  NAND _358_ (
    .A(_085_),
    .B(_084_),
    .Y(_086_)
  );
  NOR _359_ (
    .A(_078_),
    .B(_086_),
    .Y(_087_)
  );
  NOR _360_ (
    .A(_087_),
    .B(_082_),
    .Y(_230_)
  );
  NOR _361_ (
    .A(_082_),
    .B(_302_),
    .Y(_088_)
  );
  NOR _362_ (
    .A(_232_),
    .B(_231_),
    .Y(_090_)
  );
  NAND _363_ (
    .A(_232_),
    .B(_231_),
    .Y(_093_)
  );
  NOT _364_ (
    .A(_093_),
    .Y(_095_)
  );
  NOR _365_ (
    .A(_095_),
    .B(_090_),
    .Y(_096_)
  );
  NOT _366_ (
    .A(_096_),
    .Y(_097_)
  );
  NOR _367_ (
    .A(_097_),
    .B(_088_),
    .Y(_098_)
  );
  NAND _368_ (
    .A(_078_),
    .B(_086_),
    .Y(_099_)
  );
  NAND _369_ (
    .A(_099_),
    .B(_301_),
    .Y(_100_)
  );
  NOR _370_ (
    .A(_096_),
    .B(_100_),
    .Y(_102_)
  );
  NOR _371_ (
    .A(_102_),
    .B(_098_),
    .Y(_233_)
  );
  NOR _372_ (
    .A(_098_),
    .B(_095_),
    .Y(_105_)
  );
  NOT _373_ (
    .A(_234_),
    .Y(_107_)
  );
  NOT _374_ (
    .A(_236_),
    .Y(_108_)
  );
  NOR _375_ (
    .A(_108_),
    .B(_107_),
    .Y(_109_)
  );
  NOR _376_ (
    .A(_236_),
    .B(_234_),
    .Y(_111_)
  );
  NOR _377_ (
    .A(_111_),
    .B(_109_),
    .Y(_112_)
  );
  NOT _378_ (
    .A(_112_),
    .Y(_113_)
  );
  NOR _379_ (
    .A(_113_),
    .B(_105_),
    .Y(_114_)
  );
  NAND _380_ (
    .A(_096_),
    .B(_100_),
    .Y(_115_)
  );
  NAND _381_ (
    .A(_115_),
    .B(_093_),
    .Y(_116_)
  );
  NOR _382_ (
    .A(_112_),
    .B(_116_),
    .Y(_117_)
  );
  NOR _383_ (
    .A(_117_),
    .B(_114_),
    .Y(_237_)
  );
  NOT _384_ (
    .A(_109_),
    .Y(_118_)
  );
  NAND _385_ (
    .A(_112_),
    .B(_116_),
    .Y(_119_)
  );
  NAND _386_ (
    .A(_119_),
    .B(_118_),
    .Y(_120_)
  );
  NOT _387_ (
    .A(_238_),
    .Y(_121_)
  );
  NOT _388_ (
    .A(_240_),
    .Y(_122_)
  );
  NOR _389_ (
    .A(_122_),
    .B(_121_),
    .Y(_123_)
  );
  NOR _390_ (
    .A(_240_),
    .B(_238_),
    .Y(_124_)
  );
  NOR _391_ (
    .A(_124_),
    .B(_123_),
    .Y(_125_)
  );
  NOR _392_ (
    .A(_125_),
    .B(_120_),
    .Y(_126_)
  );
  NOR _393_ (
    .A(_114_),
    .B(_109_),
    .Y(_127_)
  );
  NOT _394_ (
    .A(_125_),
    .Y(_128_)
  );
  NOR _395_ (
    .A(_128_),
    .B(_127_),
    .Y(_129_)
  );
  NOR _396_ (
    .A(_129_),
    .B(_126_),
    .Y(_246_)
  );
  NOR _397_ (
    .A(_250_),
    .B(_248_),
    .Y(_130_)
  );
  NAND _398_ (
    .A(_250_),
    .B(_248_),
    .Y(_131_)
  );
  NOT _399_ (
    .A(_131_),
    .Y(_132_)
  );
  NOR _400_ (
    .A(_132_),
    .B(_130_),
    .Y(_133_)
  );
  NOT _401_ (
    .A(_133_),
    .Y(_134_)
  );
  NOR _402_ (
    .A(_124_),
    .B(_127_),
    .Y(_135_)
  );
  NOR _403_ (
    .A(_135_),
    .B(_123_),
    .Y(_136_)
  );
  NOR _404_ (
    .A(_136_),
    .B(_134_),
    .Y(_137_)
  );
  NOR _405_ (
    .A(_123_),
    .B(_120_),
    .Y(_138_)
  );
  NOR _406_ (
    .A(_138_),
    .B(_124_),
    .Y(_139_)
  );
  NOR _407_ (
    .A(_139_),
    .B(_133_),
    .Y(_140_)
  );
  NOR _408_ (
    .A(_140_),
    .B(_137_),
    .Y(_261_)
  );
  NAND _409_ (
    .A(_139_),
    .B(_133_),
    .Y(_141_)
  );
  NAND _410_ (
    .A(_141_),
    .B(_131_),
    .Y(_142_)
  );
  NOT _411_ (
    .A(_263_),
    .Y(_143_)
  );
  NOT _412_ (
    .A(_265_),
    .Y(_144_)
  );
  NOR _413_ (
    .A(_144_),
    .B(_143_),
    .Y(_146_)
  );
  NOR _414_ (
    .A(_265_),
    .B(_263_),
    .Y(_147_)
  );
  NOR _415_ (
    .A(_147_),
    .B(_146_),
    .Y(_148_)
  );
  NOR _416_ (
    .A(_148_),
    .B(_142_),
    .Y(_149_)
  );
  NOR _417_ (
    .A(_137_),
    .B(_132_),
    .Y(_150_)
  );
  NOT _418_ (
    .A(_148_),
    .Y(_151_)
  );
  NOR _419_ (
    .A(_151_),
    .B(_150_),
    .Y(_152_)
  );
  NOR _420_ (
    .A(_152_),
    .B(_149_),
    .Y(_270_)
  );
  NOT _421_ (
    .A(_272_),
    .Y(_153_)
  );
  NOT _422_ (
    .A(_274_),
    .Y(_154_)
  );
  NOR _423_ (
    .A(_154_),
    .B(_153_),
    .Y(_156_)
  );
  NOR _424_ (
    .A(_274_),
    .B(_272_),
    .Y(_157_)
  );
  NOR _425_ (
    .A(_157_),
    .B(_156_),
    .Y(_158_)
  );
  NOT _426_ (
    .A(_158_),
    .Y(_159_)
  );
  NOR _427_ (
    .A(_147_),
    .B(_150_),
    .Y(_160_)
  );
  NOR _428_ (
    .A(_160_),
    .B(_146_),
    .Y(_161_)
  );
  NOR _429_ (
    .A(_161_),
    .B(_159_),
    .Y(_162_)
  );
  NOR _430_ (
    .A(_146_),
    .B(_142_),
    .Y(_163_)
  );
  NOR _431_ (
    .A(_163_),
    .B(_147_),
    .Y(_164_)
  );
  NOR _432_ (
    .A(_164_),
    .B(_158_),
    .Y(_165_)
  );
  NOR _433_ (
    .A(_165_),
    .B(_162_),
    .Y(_282_)
  );
  NOT _434_ (
    .A(_156_),
    .Y(_167_)
  );
  NAND _435_ (
    .A(_164_),
    .B(_158_),
    .Y(_168_)
  );
  NAND _436_ (
    .A(_168_),
    .B(_167_),
    .Y(_169_)
  );
  NOT _437_ (
    .A(_284_),
    .Y(_170_)
  );
  NOT _438_ (
    .A(_286_),
    .Y(_171_)
  );
  NOR _439_ (
    .A(_171_),
    .B(_170_),
    .Y(_172_)
  );
  NOR _440_ (
    .A(_286_),
    .B(_284_),
    .Y(_173_)
  );
  NOR _441_ (
    .A(_173_),
    .B(_172_),
    .Y(_174_)
  );
  NOR _442_ (
    .A(_174_),
    .B(_169_),
    .Y(_175_)
  );
  NOR _443_ (
    .A(_162_),
    .B(_156_),
    .Y(_176_)
  );
  NOT _444_ (
    .A(_174_),
    .Y(_177_)
  );
  NOR _445_ (
    .A(_177_),
    .B(_176_),
    .Y(_178_)
  );
  NOR _446_ (
    .A(_178_),
    .B(_175_),
    .Y(_291_)
  );
  NOT _447_ (
    .A(_293_),
    .Y(_179_)
  );
  NOT _448_ (
    .A(_295_),
    .Y(_180_)
  );
  NOR _449_ (
    .A(_180_),
    .B(_179_),
    .Y(_181_)
  );
  NOR _450_ (
    .A(_295_),
    .B(_293_),
    .Y(_182_)
  );
  NOR _451_ (
    .A(_182_),
    .B(_181_),
    .Y(_183_)
  );
  NOT _452_ (
    .A(_183_),
    .Y(_184_)
  );
  NOR _453_ (
    .A(_173_),
    .B(_176_),
    .Y(_185_)
  );
  NOR _454_ (
    .A(_185_),
    .B(_172_),
    .Y(_186_)
  );
  NOR _455_ (
    .A(_186_),
    .B(_184_),
    .Y(_187_)
  );
  NOR _456_ (
    .A(_172_),
    .B(_169_),
    .Y(_188_)
  );
  NOR _457_ (
    .A(_188_),
    .B(_173_),
    .Y(_189_)
  );
  NOR _458_ (
    .A(_189_),
    .B(_183_),
    .Y(_190_)
  );
  NOR _459_ (
    .A(_190_),
    .B(_187_),
    .Y(_079_)
  );
  NOR _460_ (
    .A(_187_),
    .B(_181_),
    .Y(_191_)
  );
  NOT _461_ (
    .A(_081_),
    .Y(_192_)
  );
  NOT _462_ (
    .A(_083_),
    .Y(_193_)
  );
  NOR _463_ (
    .A(_193_),
    .B(_192_),
    .Y(_194_)
  );
  NOR _464_ (
    .A(_083_),
    .B(_081_),
    .Y(_195_)
  );
  NOR _465_ (
    .A(_195_),
    .B(_194_),
    .Y(_196_)
  );
  NOT _466_ (
    .A(_196_),
    .Y(_197_)
  );
  NOR _467_ (
    .A(_197_),
    .B(_191_),
    .Y(_198_)
  );
  NOT _468_ (
    .A(_181_),
    .Y(_199_)
  );
  NAND _469_ (
    .A(_189_),
    .B(_183_),
    .Y(_200_)
  );
  NAND _470_ (
    .A(_200_),
    .B(_199_),
    .Y(_201_)
  );
  NOR _471_ (
    .A(_196_),
    .B(_201_),
    .Y(_202_)
  );
  NOR _472_ (
    .A(_202_),
    .B(_198_),
    .Y(_089_)
  );
  NOR _473_ (
    .A(_198_),
    .B(_194_),
    .Y(_203_)
  );
  NOT _474_ (
    .A(_092_),
    .Y(_204_)
  );
  NOT _475_ (
    .A(_094_),
    .Y(_205_)
  );
  NOR _476_ (
    .A(_205_),
    .B(_204_),
    .Y(_206_)
  );
  NOR _477_ (
    .A(_094_),
    .B(_092_),
    .Y(_207_)
  );
  NOR _478_ (
    .A(_207_),
    .B(_206_),
    .Y(_208_)
  );
  NOT _479_ (
    .A(_208_),
    .Y(_209_)
  );
  NOR _480_ (
    .A(_209_),
    .B(_203_),
    .Y(_210_)
  );
  NOT _481_ (
    .A(_194_),
    .Y(_211_)
  );
  NAND _482_ (
    .A(_196_),
    .B(_201_),
    .Y(_212_)
  );
  NAND _483_ (
    .A(_212_),
    .B(_211_),
    .Y(_214_)
  );
  NOR _484_ (
    .A(_208_),
    .B(_214_),
    .Y(_215_)
  );
  NOR _485_ (
    .A(_215_),
    .B(_210_),
    .Y(_101_)
  );
  NOR _486_ (
    .A(_210_),
    .B(_206_),
    .Y(_216_)
  );
  NOR _487_ (
    .A(_104_),
    .B(_103_),
    .Y(_217_)
  );
  NOT _488_ (
    .A(_217_),
    .Y(_218_)
  );
  NAND _489_ (
    .A(_104_),
    .B(_103_),
    .Y(_219_)
  );
  NAND _490_ (
    .A(_219_),
    .B(_218_),
    .Y(_220_)
  );
  NOT _491_ (
    .A(_220_),
    .Y(_221_)
  );
  NAND _492_ (
    .A(_221_),
    .B(_216_),
    .Y(_222_)
  );
  NOT _493_ (
    .A(_206_),
    .Y(_224_)
  );
  NAND _494_ (
    .A(_208_),
    .B(_214_),
    .Y(_225_)
  );
  NAND _495_ (
    .A(_225_),
    .B(_224_),
    .Y(_226_)
  );
  NAND _496_ (
    .A(_220_),
    .B(_226_),
    .Y(_227_)
  );
  NAND _497_ (
    .A(_227_),
    .B(_222_),
    .Y(_110_)
  );
  assign _075_ = b[0];
  assign _076_ = a[0];
  assign _229_ = c;
  assign w[0] = _235_;
  assign _239_ = b[1];
  assign _254_ = a[1];
  assign w[1] = _077_;
  assign _091_ = b[2];
  assign _106_ = a[2];
  assign w[2] = _145_;
  assign _155_ = b[3];
  assign _166_ = a[3];
  assign w[3] = _213_;
  assign _223_ = b[4];
  assign _228_ = a[4];
  assign w[4] = _230_;
  assign _231_ = b[5];
  assign _232_ = a[5];
  assign w[5] = _233_;
  assign _234_ = b[6];
  assign _236_ = a[6];
  assign w[6] = _237_;
  assign _238_ = b[7];
  assign _240_ = a[7];
  assign w[7] = _246_;
  assign _248_ = b[8];
  assign _250_ = a[8];
  assign w[8] = _261_;
  assign _263_ = b[9];
  assign _265_ = a[9];
  assign w[9] = _270_;
  assign _272_ = b[10];
  assign _274_ = a[10];
  assign w[10] = _282_;
  assign _284_ = b[11];
  assign _286_ = a[11];
  assign w[11] = _291_;
  assign _293_ = b[12];
  assign _295_ = a[12];
  assign w[12] = _079_;
  assign _081_ = b[13];
  assign _083_ = a[13];
  assign w[13] = _089_;
  assign _092_ = b[14];
  assign _094_ = a[14];
  assign w[14] = _101_;
  assign _103_ = b[15];
  assign _104_ = a[15];
  assign w[15] = _110_;
endmodule

(* top =  1  *)
(* src = "StrALU.v:37" *)
module ALU(inN, inM, inC, opc, outF, zer, neg);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  wire _24_;
  wire _25_;
  wire _26_;
  wire _27_;
  wire _28_;
  wire _29_;
  wire _30_;
  wire _31_;
  wire _32_;
  wire _33_;
  wire _34_;
  wire _35_;
  wire _36_;
  wire _37_;
  wire _38_;
  wire _39_;
  wire _40_;
  wire _41_;
  wire _42_;
  wire _43_;
  wire _44_;
  wire _45_;
  wire _46_;
  wire _47_;
  wire _48_;
  wire _49_;
  wire _50_;
  wire _51_;
  wire _52_;
  wire _53_;
  wire _54_;
  wire _55_;
  wire _56_;
  wire _57_;
  (* src = "StrALU.v:39" *)
  wire [15:0] ADDres;
  (* src = "StrALU.v:39" *)
  wire [15:0] Fmux;
  (* src = "StrALU.v:40" *)
  wire S0;
  (* src = "StrALU.v:40" *)
  wire S1;
  (* src = "StrALU.v:40" *)
  wire Smux;
  (* src = "StrALU.v:39" *)
  wire [15:0] andMN;
  (* src = "StrALU.v:37" *)
  input inC;
  (* src = "StrALU.v:37" *)
  input [15:0] inM;
  (* src = "StrALU.v:37" *)
  input [15:0] inN;
  (* src = "StrALU.v:39" *)
  wire [15:0] invM;
  (* src = "StrALU.v:38" *)
  output neg;
  (* src = "StrALU.v:37" *)
  input [2:0] opc;
  (* src = "StrALU.v:39" *)
  wire [15:0] orMN;
  (* src = "StrALU.v:38" *)
  output [15:0] outF;
  (* src = "StrALU.v:39" *)
  wire [15:0] shM;
  (* src = "StrALU.v:39" *)
  wire [15:0] shN;
  (* src = "StrALU.v:38" *)
  output zer;
  NOT _58_ (
    .A(_16_),
    .Y(_26_)
  );
  NAND _59_ (
    .A(_23_),
    .B(_26_),
    .Y(_34_)
  );
  NOT _60_ (
    .A(_49_),
    .Y(_28_)
  );
  NAND _61_ (
    .A(_28_),
    .B(_23_),
    .Y(_55_)
  );
  NOT _62_ (
    .A(_17_),
    .Y(_30_)
  );
  NOT _63_ (
    .A(_35_),
    .Y(_31_)
  );
  NAND _64_ (
    .A(_31_),
    .B(_30_),
    .Y(_33_)
  );
  NOT _65_ (
    .A(_18_),
    .Y(_36_)
  );
  NOR _66_ (
    .A(_32_),
    .B(_56_),
    .Y(_37_)
  );
  NAND _67_ (
    .A(_37_),
    .B(_36_),
    .Y(_39_)
  );
  NOT _68_ (
    .A(_25_),
    .Y(_41_)
  );
  NOR _69_ (
    .A(_40_),
    .B(_27_),
    .Y(_42_)
  );
  NAND _70_ (
    .A(_42_),
    .B(_41_),
    .Y(_43_)
  );
  NOR _71_ (
    .A(_43_),
    .B(_39_),
    .Y(_44_)
  );
  NOR _72_ (
    .A(_24_),
    .B(_21_),
    .Y(_46_)
  );
  NOR _73_ (
    .A(_29_),
    .B(_20_),
    .Y(_47_)
  );
  NAND _74_ (
    .A(_47_),
    .B(_46_),
    .Y(_48_)
  );
  NOR _75_ (
    .A(_22_),
    .B(_19_),
    .Y(_50_)
  );
  NOR _76_ (
    .A(_38_),
    .B(_57_),
    .Y(_51_)
  );
  NAND _77_ (
    .A(_51_),
    .B(_50_),
    .Y(_52_)
  );
  NOR _78_ (
    .A(_52_),
    .B(_48_),
    .Y(_53_)
  );
  NAND _79_ (
    .A(_53_),
    .B(_44_),
    .Y(_54_)
  );
  NOR _80_ (
    .A(_54_),
    .B(_33_),
    .Y(_45_)
  );
  (* src = "StrALU.v:49" *)
  ADDER ADD1 (
    .a(inM),
    .b(Fmux),
    .c(Smux),
    .w(ADDres)
  );
  (* src = "StrALU.v:52" *)
  BITAND AND1 (
    .a(inM),
    .b(inN),
    .w(andMN)
  );
  (* src = "StrALU.v:47" *)
  MUX4_16 MUX1 (
    .a(inN),
    .b(shN),
    .c(16'b0000000000000000),
    .d(shM),
    .s(opc[1:0]),
    .w(Fmux)
  );
  (* src = "StrALU.v:48" *)
  MUX4_1 MUX2 (
    .a(inC),
    .b(1'b0),
    .c(1'b1),
    .d(1'b0),
    .s(opc[1:0]),
    .w(Smux)
  );
  (* src = "StrALU.v:55" *)
  MUX4_16 MUX3 (
    .a(andMN),
    .b(orMN),
    .c(invM),
    .d(ADDres),
    .s({ S1, S0 }),
    .w(outF)
  );
  (* src = "StrALU.v:50" *)
  BITNOT NOT1 (
    .a(inM),
    .w(invM)
  );
  (* src = "StrALU.v:51" *)
  BITOR OR1 (
    .a(inM),
    .b(inN),
    .w(orMN)
  );
  (* src = "StrALU.v:45" *)
  OTRSHIFTER SHIFTER1 (
    .a(inM),
    .w(shM)
  );
  (* src = "StrALU.v:46" *)
  OTRSHIFTER SHIFTER2 (
    .a(inN),
    .w(shN)
  );
  assign neg = outF[15];
  assign _16_ = opc[0];
  assign _23_ = opc[2];
  assign S0 = _34_;
  assign _49_ = opc[1];
  assign S1 = _55_;
  assign _56_ = outF[10];
  assign _57_ = outF[11];
  assign _17_ = outF[8];
  assign _18_ = outF[9];
  assign _19_ = outF[14];
  assign _20_ = outF[15];
  assign _21_ = outF[12];
  assign _22_ = outF[13];
  assign _24_ = outF[2];
  assign _25_ = outF[3];
  assign _27_ = outF[0];
  assign _29_ = outF[1];
  assign _32_ = outF[6];
  assign _35_ = outF[7];
  assign _38_ = outF[4];
  assign _40_ = outF[5];
  assign zer = _45_;
endmodule

(* src = "StrALU.v:1" *)
module BITAND(a, b, w);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  (* src = "StrALU.v:1" *)
  input [15:0] a;
  (* src = "StrALU.v:1" *)
  input [15:0] b;
  (* src = "StrALU.v:1" *)
  output [15:0] w;
  NOT _080_ (
    .A(_030_),
    .Y(_071_)
  );
  NOT _081_ (
    .A(_031_),
    .Y(_072_)
  );
  NOR _082_ (
    .A(_072_),
    .B(_071_),
    .Y(_032_)
  );
  NOT _083_ (
    .A(_033_),
    .Y(_073_)
  );
  NOT _084_ (
    .A(_035_),
    .Y(_074_)
  );
  NOR _085_ (
    .A(_074_),
    .B(_073_),
    .Y(_036_)
  );
  NOT _086_ (
    .A(_037_),
    .Y(_076_)
  );
  NOT _087_ (
    .A(_038_),
    .Y(_077_)
  );
  NOR _088_ (
    .A(_077_),
    .B(_076_),
    .Y(_039_)
  );
  NOT _089_ (
    .A(_040_),
    .Y(_078_)
  );
  NOT _090_ (
    .A(_041_),
    .Y(_079_)
  );
  NOR _091_ (
    .A(_079_),
    .B(_078_),
    .Y(_042_)
  );
  NOT _092_ (
    .A(_000_),
    .Y(_043_)
  );
  NOT _093_ (
    .A(_001_),
    .Y(_045_)
  );
  NOR _094_ (
    .A(_045_),
    .B(_043_),
    .Y(_012_)
  );
  NOT _095_ (
    .A(_023_),
    .Y(_046_)
  );
  NOT _096_ (
    .A(_034_),
    .Y(_047_)
  );
  NOR _097_ (
    .A(_047_),
    .B(_046_),
    .Y(_044_)
  );
  NOT _098_ (
    .A(_052_),
    .Y(_048_)
  );
  NOT _099_ (
    .A(_059_),
    .Y(_049_)
  );
  NOR _100_ (
    .A(_049_),
    .B(_048_),
    .Y(_067_)
  );
  NOT _101_ (
    .A(_075_),
    .Y(_050_)
  );
  NOT _102_ (
    .A(_002_),
    .Y(_051_)
  );
  NOR _103_ (
    .A(_051_),
    .B(_050_),
    .Y(_003_)
  );
  NOT _104_ (
    .A(_004_),
    .Y(_053_)
  );
  NOT _105_ (
    .A(_005_),
    .Y(_054_)
  );
  NOR _106_ (
    .A(_054_),
    .B(_053_),
    .Y(_006_)
  );
  NOT _107_ (
    .A(_007_),
    .Y(_055_)
  );
  NOT _108_ (
    .A(_008_),
    .Y(_056_)
  );
  NOR _109_ (
    .A(_056_),
    .B(_055_),
    .Y(_009_)
  );
  NOT _110_ (
    .A(_010_),
    .Y(_057_)
  );
  NOT _111_ (
    .A(_011_),
    .Y(_058_)
  );
  NOR _112_ (
    .A(_058_),
    .B(_057_),
    .Y(_013_)
  );
  NOT _113_ (
    .A(_014_),
    .Y(_060_)
  );
  NOT _114_ (
    .A(_015_),
    .Y(_061_)
  );
  NOR _115_ (
    .A(_061_),
    .B(_060_),
    .Y(_016_)
  );
  NOT _116_ (
    .A(_017_),
    .Y(_062_)
  );
  NOT _117_ (
    .A(_018_),
    .Y(_063_)
  );
  NOR _118_ (
    .A(_063_),
    .B(_062_),
    .Y(_019_)
  );
  NOT _119_ (
    .A(_020_),
    .Y(_064_)
  );
  NOT _120_ (
    .A(_021_),
    .Y(_065_)
  );
  NOR _121_ (
    .A(_065_),
    .B(_064_),
    .Y(_022_)
  );
  NOT _122_ (
    .A(_024_),
    .Y(_066_)
  );
  NOT _123_ (
    .A(_025_),
    .Y(_068_)
  );
  NOR _124_ (
    .A(_068_),
    .B(_066_),
    .Y(_026_)
  );
  NOT _125_ (
    .A(_027_),
    .Y(_069_)
  );
  NOT _126_ (
    .A(_028_),
    .Y(_070_)
  );
  NOR _127_ (
    .A(_070_),
    .B(_069_),
    .Y(_029_)
  );
  assign _000_ = b[0];
  assign _001_ = a[0];
  assign w[0] = _012_;
  assign _023_ = b[1];
  assign _034_ = a[1];
  assign w[1] = _044_;
  assign _052_ = b[2];
  assign _059_ = a[2];
  assign w[2] = _067_;
  assign _075_ = b[3];
  assign _002_ = a[3];
  assign w[3] = _003_;
  assign _004_ = b[4];
  assign _005_ = a[4];
  assign w[4] = _006_;
  assign _007_ = b[5];
  assign _008_ = a[5];
  assign w[5] = _009_;
  assign _010_ = b[6];
  assign _011_ = a[6];
  assign w[6] = _013_;
  assign _014_ = b[7];
  assign _015_ = a[7];
  assign w[7] = _016_;
  assign _017_ = b[8];
  assign _018_ = a[8];
  assign w[8] = _019_;
  assign _020_ = b[9];
  assign _021_ = a[9];
  assign w[9] = _022_;
  assign _024_ = b[10];
  assign _025_ = a[10];
  assign w[10] = _026_;
  assign _027_ = b[11];
  assign _028_ = a[11];
  assign w[11] = _029_;
  assign _030_ = b[12];
  assign _031_ = a[12];
  assign w[12] = _032_;
  assign _033_ = b[13];
  assign _035_ = a[13];
  assign w[13] = _036_;
  assign _037_ = b[14];
  assign _038_ = a[14];
  assign w[14] = _039_;
  assign _040_ = b[15];
  assign _041_ = a[15];
  assign w[15] = _042_;
endmodule

(* src = "StrALU.v:9" *)
module BITNOT(a, w);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  wire _24_;
  wire _25_;
  wire _26_;
  wire _27_;
  wire _28_;
  wire _29_;
  wire _30_;
  wire _31_;
  (* src = "StrALU.v:9" *)
  input [15:0] a;
  (* src = "StrALU.v:9" *)
  output [15:0] w;
  NOT _32_ (
    .A(_00_),
    .Y(_01_)
  );
  NOT _33_ (
    .A(_12_),
    .Y(_23_)
  );
  NOT _34_ (
    .A(_26_),
    .Y(_27_)
  );
  NOT _35_ (
    .A(_28_),
    .Y(_29_)
  );
  NOT _36_ (
    .A(_30_),
    .Y(_31_)
  );
  NOT _37_ (
    .A(_02_),
    .Y(_03_)
  );
  NOT _38_ (
    .A(_04_),
    .Y(_05_)
  );
  NOT _39_ (
    .A(_06_),
    .Y(_07_)
  );
  NOT _40_ (
    .A(_08_),
    .Y(_09_)
  );
  NOT _41_ (
    .A(_10_),
    .Y(_11_)
  );
  NOT _42_ (
    .A(_13_),
    .Y(_14_)
  );
  NOT _43_ (
    .A(_15_),
    .Y(_16_)
  );
  NOT _44_ (
    .A(_17_),
    .Y(_18_)
  );
  NOT _45_ (
    .A(_19_),
    .Y(_20_)
  );
  NOT _46_ (
    .A(_21_),
    .Y(_22_)
  );
  NOT _47_ (
    .A(_24_),
    .Y(_25_)
  );
  assign _00_ = a[0];
  assign w[0] = _01_;
  assign _12_ = a[1];
  assign w[1] = _23_;
  assign _26_ = a[2];
  assign w[2] = _27_;
  assign _28_ = a[3];
  assign w[3] = _29_;
  assign _30_ = a[4];
  assign w[4] = _31_;
  assign _02_ = a[5];
  assign w[5] = _03_;
  assign _04_ = a[6];
  assign w[6] = _05_;
  assign _06_ = a[7];
  assign w[7] = _07_;
  assign _08_ = a[8];
  assign w[8] = _09_;
  assign _10_ = a[9];
  assign w[9] = _11_;
  assign _13_ = a[10];
  assign w[10] = _14_;
  assign _15_ = a[11];
  assign w[11] = _16_;
  assign _17_ = a[12];
  assign w[12] = _18_;
  assign _19_ = a[13];
  assign w[13] = _20_;
  assign _21_ = a[14];
  assign w[14] = _22_;
  assign _24_ = a[15];
  assign w[15] = _25_;
endmodule

(* src = "StrALU.v:5" *)
module BITOR(a, b, w);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  (* src = "StrALU.v:5" *)
  input [15:0] a;
  (* src = "StrALU.v:5" *)
  input [15:0] b;
  (* src = "StrALU.v:5" *)
  output [15:0] w;
  NOT _080_ (
    .A(_000_),
    .Y(_043_)
  );
  NOT _081_ (
    .A(_001_),
    .Y(_045_)
  );
  NAND _082_ (
    .A(_045_),
    .B(_043_),
    .Y(_012_)
  );
  NOT _083_ (
    .A(_023_),
    .Y(_046_)
  );
  NOT _084_ (
    .A(_034_),
    .Y(_047_)
  );
  NAND _085_ (
    .A(_047_),
    .B(_046_),
    .Y(_044_)
  );
  NOT _086_ (
    .A(_052_),
    .Y(_048_)
  );
  NOT _087_ (
    .A(_059_),
    .Y(_049_)
  );
  NAND _088_ (
    .A(_049_),
    .B(_048_),
    .Y(_067_)
  );
  NOT _089_ (
    .A(_075_),
    .Y(_050_)
  );
  NOT _090_ (
    .A(_002_),
    .Y(_051_)
  );
  NAND _091_ (
    .A(_051_),
    .B(_050_),
    .Y(_003_)
  );
  NOT _092_ (
    .A(_004_),
    .Y(_053_)
  );
  NOT _093_ (
    .A(_005_),
    .Y(_054_)
  );
  NAND _094_ (
    .A(_054_),
    .B(_053_),
    .Y(_006_)
  );
  NOT _095_ (
    .A(_007_),
    .Y(_055_)
  );
  NOT _096_ (
    .A(_008_),
    .Y(_056_)
  );
  NAND _097_ (
    .A(_056_),
    .B(_055_),
    .Y(_009_)
  );
  NOT _098_ (
    .A(_010_),
    .Y(_057_)
  );
  NOT _099_ (
    .A(_011_),
    .Y(_058_)
  );
  NAND _100_ (
    .A(_058_),
    .B(_057_),
    .Y(_013_)
  );
  NOT _101_ (
    .A(_014_),
    .Y(_060_)
  );
  NOT _102_ (
    .A(_015_),
    .Y(_061_)
  );
  NAND _103_ (
    .A(_061_),
    .B(_060_),
    .Y(_016_)
  );
  NOT _104_ (
    .A(_017_),
    .Y(_062_)
  );
  NOT _105_ (
    .A(_018_),
    .Y(_063_)
  );
  NAND _106_ (
    .A(_063_),
    .B(_062_),
    .Y(_019_)
  );
  NOT _107_ (
    .A(_020_),
    .Y(_064_)
  );
  NOT _108_ (
    .A(_021_),
    .Y(_065_)
  );
  NAND _109_ (
    .A(_065_),
    .B(_064_),
    .Y(_022_)
  );
  NOT _110_ (
    .A(_024_),
    .Y(_066_)
  );
  NOT _111_ (
    .A(_025_),
    .Y(_068_)
  );
  NAND _112_ (
    .A(_068_),
    .B(_066_),
    .Y(_026_)
  );
  NOT _113_ (
    .A(_027_),
    .Y(_069_)
  );
  NOT _114_ (
    .A(_028_),
    .Y(_070_)
  );
  NAND _115_ (
    .A(_070_),
    .B(_069_),
    .Y(_029_)
  );
  NOT _116_ (
    .A(_030_),
    .Y(_071_)
  );
  NOT _117_ (
    .A(_031_),
    .Y(_072_)
  );
  NAND _118_ (
    .A(_072_),
    .B(_071_),
    .Y(_032_)
  );
  NOT _119_ (
    .A(_033_),
    .Y(_073_)
  );
  NOT _120_ (
    .A(_035_),
    .Y(_074_)
  );
  NAND _121_ (
    .A(_074_),
    .B(_073_),
    .Y(_036_)
  );
  NOT _122_ (
    .A(_037_),
    .Y(_076_)
  );
  NOT _123_ (
    .A(_038_),
    .Y(_077_)
  );
  NAND _124_ (
    .A(_077_),
    .B(_076_),
    .Y(_039_)
  );
  NOT _125_ (
    .A(_040_),
    .Y(_078_)
  );
  NOT _126_ (
    .A(_041_),
    .Y(_079_)
  );
  NAND _127_ (
    .A(_079_),
    .B(_078_),
    .Y(_042_)
  );
  assign _000_ = b[3];
  assign _001_ = a[3];
  assign w[3] = _012_;
  assign _023_ = b[4];
  assign _034_ = a[4];
  assign w[4] = _044_;
  assign _052_ = b[5];
  assign _059_ = a[5];
  assign w[5] = _067_;
  assign _075_ = b[6];
  assign _002_ = a[6];
  assign w[6] = _003_;
  assign _004_ = b[7];
  assign _005_ = a[7];
  assign w[7] = _006_;
  assign _007_ = b[8];
  assign _008_ = a[8];
  assign w[8] = _009_;
  assign _010_ = b[9];
  assign _011_ = a[9];
  assign w[9] = _013_;
  assign _014_ = b[10];
  assign _015_ = a[10];
  assign w[10] = _016_;
  assign _017_ = b[11];
  assign _018_ = a[11];
  assign w[11] = _019_;
  assign _020_ = b[12];
  assign _021_ = a[12];
  assign w[12] = _022_;
  assign _024_ = b[13];
  assign _025_ = a[13];
  assign w[13] = _026_;
  assign _027_ = b[14];
  assign _028_ = a[14];
  assign w[14] = _029_;
  assign _030_ = b[15];
  assign _031_ = a[15];
  assign w[15] = _032_;
  assign _033_ = b[0];
  assign _035_ = a[0];
  assign w[0] = _036_;
  assign _037_ = b[1];
  assign _038_ = a[1];
  assign w[1] = _039_;
  assign _040_ = b[2];
  assign _041_ = a[2];
  assign w[2] = _042_;
endmodule

(* src = "StrALU.v:17" *)
module MUX4_1(a, b, c, d, s, w);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  (* src = "StrALU.v:17" *)
  input a;
  (* src = "StrALU.v:17" *)
  input b;
  (* src = "StrALU.v:17" *)
  input c;
  (* src = "StrALU.v:17" *)
  input d;
  (* src = "StrALU.v:17" *)
  input [1:0] s;
  (* src = "StrALU.v:17" *)
  output w;
  NOT _23_ (
    .A(_00_),
    .Y(_14_)
  );
  NOR _24_ (
    .A(_15_),
    .B(_01_),
    .Y(_16_)
  );
  NOT _25_ (
    .A(_01_),
    .Y(_02_)
  );
  NOR _26_ (
    .A(_13_),
    .B(_02_),
    .Y(_04_)
  );
  NOR _27_ (
    .A(_04_),
    .B(_16_),
    .Y(_06_)
  );
  NOR _28_ (
    .A(_06_),
    .B(_14_),
    .Y(_07_)
  );
  NOR _29_ (
    .A(_03_),
    .B(_01_),
    .Y(_08_)
  );
  NOR _30_ (
    .A(_12_),
    .B(_02_),
    .Y(_09_)
  );
  NOR _31_ (
    .A(_09_),
    .B(_08_),
    .Y(_10_)
  );
  NOR _32_ (
    .A(_10_),
    .B(_00_),
    .Y(_11_)
  );
  NOR _33_ (
    .A(_11_),
    .B(_07_),
    .Y(_05_)
  );
  assign _00_ = s[0];
  assign _01_ = s[1];
  assign _12_ = c;
  assign _13_ = d;
  assign _15_ = b;
  assign _03_ = a;
  assign w = _05_;
endmodule

(* src = "StrALU.v:25" *)
module MUX4_16(a, b, c, d, s, w);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  wire _196_;
  wire _197_;
  wire _198_;
  wire _199_;
  wire _200_;
  wire _201_;
  wire _202_;
  wire _203_;
  wire _204_;
  wire _205_;
  wire _206_;
  wire _207_;
  wire _208_;
  wire _209_;
  wire _210_;
  wire _211_;
  wire _212_;
  wire _213_;
  wire _214_;
  wire _215_;
  wire _216_;
  wire _217_;
  wire _218_;
  wire _219_;
  wire _220_;
  wire _221_;
  wire _222_;
  wire _223_;
  wire _224_;
  wire _225_;
  wire _226_;
  wire _227_;
  wire _228_;
  wire _229_;
  wire _230_;
  wire _231_;
  wire _232_;
  wire _233_;
  wire _234_;
  wire _235_;
  wire _236_;
  wire _237_;
  wire _238_;
  wire _239_;
  wire _240_;
  wire _241_;
  wire _242_;
  wire _243_;
  wire _244_;
  wire _245_;
  wire _246_;
  wire _247_;
  wire _248_;
  wire _249_;
  wire _250_;
  wire _251_;
  wire _252_;
  wire _253_;
  wire _254_;
  wire _255_;
  wire _256_;
  wire _257_;
  wire _258_;
  wire _259_;
  wire _260_;
  wire _261_;
  wire _262_;
  wire _263_;
  wire _264_;
  wire _265_;
  wire _266_;
  wire _267_;
  wire _268_;
  (* src = "StrALU.v:25" *)
  input [15:0] a;
  (* src = "StrALU.v:25" *)
  input [15:0] b;
  (* src = "StrALU.v:25" *)
  input [15:0] c;
  (* src = "StrALU.v:25" *)
  input [15:0] d;
  (* src = "StrALU.v:25" *)
  input [1:0] s;
  (* src = "StrALU.v:25" *)
  output [15:0] w;
  NOT _269_ (
    .A(_000_),
    .Y(_205_)
  );
  NOT _270_ (
    .A(_001_),
    .Y(_207_)
  );
  NAND _271_ (
    .A(_207_),
    .B(_205_),
    .Y(_208_)
  );
  NOR _272_ (
    .A(_208_),
    .B(_018_),
    .Y(_210_)
  );
  NOT _273_ (
    .A(_194_),
    .Y(_211_)
  );
  NAND _274_ (
    .A(_207_),
    .B(_000_),
    .Y(_213_)
  );
  NAND _275_ (
    .A(_001_),
    .B(_205_),
    .Y(_215_)
  );
  NAND _276_ (
    .A(_215_),
    .B(_213_),
    .Y(_218_)
  );
  NOR _277_ (
    .A(_218_),
    .B(_211_),
    .Y(_220_)
  );
  NOR _278_ (
    .A(_207_),
    .B(_000_),
    .Y(_221_)
  );
  NAND _279_ (
    .A(_221_),
    .B(_185_),
    .Y(_223_)
  );
  NOT _280_ (
    .A(_216_),
    .Y(_224_)
  );
  NAND _281_ (
    .A(_224_),
    .B(_000_),
    .Y(_226_)
  );
  NAND _282_ (
    .A(_226_),
    .B(_207_),
    .Y(_228_)
  );
  NAND _283_ (
    .A(_228_),
    .B(_223_),
    .Y(_230_)
  );
  NOR _284_ (
    .A(_230_),
    .B(_220_),
    .Y(_232_)
  );
  NOR _285_ (
    .A(_232_),
    .B(_210_),
    .Y(_034_)
  );
  NOR _286_ (
    .A(_208_),
    .B(_092_),
    .Y(_003_)
  );
  NOT _287_ (
    .A(_054_),
    .Y(_004_)
  );
  NOR _288_ (
    .A(_218_),
    .B(_004_),
    .Y(_006_)
  );
  NAND _289_ (
    .A(_221_),
    .B(_044_),
    .Y(_008_)
  );
  NOT _290_ (
    .A(_073_),
    .Y(_010_)
  );
  NAND _291_ (
    .A(_010_),
    .B(_000_),
    .Y(_012_)
  );
  NAND _292_ (
    .A(_012_),
    .B(_207_),
    .Y(_013_)
  );
  NAND _293_ (
    .A(_013_),
    .B(_008_),
    .Y(_015_)
  );
  NOR _294_ (
    .A(_015_),
    .B(_006_),
    .Y(_016_)
  );
  NOR _295_ (
    .A(_016_),
    .B(_003_),
    .Y(_102_)
  );
  NOR _296_ (
    .A(_208_),
    .B(_160_),
    .Y(_020_)
  );
  NOT _297_ (
    .A(_122_),
    .Y(_022_)
  );
  NOR _298_ (
    .A(_218_),
    .B(_022_),
    .Y(_024_)
  );
  NAND _299_ (
    .A(_221_),
    .B(_112_),
    .Y(_025_)
  );
  NOT _300_ (
    .A(_141_),
    .Y(_027_)
  );
  NAND _301_ (
    .A(_027_),
    .B(_000_),
    .Y(_028_)
  );
  NAND _302_ (
    .A(_028_),
    .B(_207_),
    .Y(_030_)
  );
  NAND _303_ (
    .A(_030_),
    .B(_025_),
    .Y(_032_)
  );
  NOR _304_ (
    .A(_032_),
    .B(_024_),
    .Y(_033_)
  );
  NOR _305_ (
    .A(_033_),
    .B(_020_),
    .Y(_161_)
  );
  NOR _306_ (
    .A(_208_),
    .B(_165_),
    .Y(_035_)
  );
  NOT _307_ (
    .A(_163_),
    .Y(_036_)
  );
  NOR _308_ (
    .A(_218_),
    .B(_036_),
    .Y(_037_)
  );
  NAND _309_ (
    .A(_221_),
    .B(_162_),
    .Y(_038_)
  );
  NOT _310_ (
    .A(_164_),
    .Y(_039_)
  );
  NAND _311_ (
    .A(_039_),
    .B(_000_),
    .Y(_040_)
  );
  NAND _312_ (
    .A(_040_),
    .B(_207_),
    .Y(_041_)
  );
  NAND _313_ (
    .A(_041_),
    .B(_038_),
    .Y(_042_)
  );
  NOR _314_ (
    .A(_042_),
    .B(_037_),
    .Y(_043_)
  );
  NOR _315_ (
    .A(_043_),
    .B(_035_),
    .Y(_166_)
  );
  NOR _316_ (
    .A(_208_),
    .B(_170_),
    .Y(_045_)
  );
  NOT _317_ (
    .A(_168_),
    .Y(_046_)
  );
  NOR _318_ (
    .A(_218_),
    .B(_046_),
    .Y(_047_)
  );
  NAND _319_ (
    .A(_221_),
    .B(_167_),
    .Y(_048_)
  );
  NOT _320_ (
    .A(_169_),
    .Y(_049_)
  );
  NAND _321_ (
    .A(_049_),
    .B(_000_),
    .Y(_050_)
  );
  NAND _322_ (
    .A(_050_),
    .B(_207_),
    .Y(_051_)
  );
  NAND _323_ (
    .A(_051_),
    .B(_048_),
    .Y(_052_)
  );
  NOR _324_ (
    .A(_052_),
    .B(_047_),
    .Y(_053_)
  );
  NOR _325_ (
    .A(_053_),
    .B(_045_),
    .Y(_171_)
  );
  NOR _326_ (
    .A(_208_),
    .B(_175_),
    .Y(_055_)
  );
  NOT _327_ (
    .A(_173_),
    .Y(_056_)
  );
  NOR _328_ (
    .A(_218_),
    .B(_056_),
    .Y(_057_)
  );
  NAND _329_ (
    .A(_221_),
    .B(_172_),
    .Y(_058_)
  );
  NOT _330_ (
    .A(_174_),
    .Y(_059_)
  );
  NAND _331_ (
    .A(_059_),
    .B(_000_),
    .Y(_060_)
  );
  NAND _332_ (
    .A(_060_),
    .B(_207_),
    .Y(_061_)
  );
  NAND _333_ (
    .A(_061_),
    .B(_058_),
    .Y(_062_)
  );
  NOR _334_ (
    .A(_062_),
    .B(_057_),
    .Y(_063_)
  );
  NOR _335_ (
    .A(_063_),
    .B(_055_),
    .Y(_176_)
  );
  NOR _336_ (
    .A(_208_),
    .B(_180_),
    .Y(_064_)
  );
  NOT _337_ (
    .A(_178_),
    .Y(_065_)
  );
  NOR _338_ (
    .A(_218_),
    .B(_065_),
    .Y(_066_)
  );
  NAND _339_ (
    .A(_221_),
    .B(_177_),
    .Y(_067_)
  );
  NOT _340_ (
    .A(_179_),
    .Y(_068_)
  );
  NAND _341_ (
    .A(_068_),
    .B(_000_),
    .Y(_069_)
  );
  NAND _342_ (
    .A(_069_),
    .B(_207_),
    .Y(_070_)
  );
  NAND _343_ (
    .A(_070_),
    .B(_067_),
    .Y(_071_)
  );
  NOR _344_ (
    .A(_071_),
    .B(_066_),
    .Y(_072_)
  );
  NOR _345_ (
    .A(_072_),
    .B(_064_),
    .Y(_181_)
  );
  NOR _346_ (
    .A(_208_),
    .B(_186_),
    .Y(_074_)
  );
  NOT _347_ (
    .A(_183_),
    .Y(_075_)
  );
  NOR _348_ (
    .A(_218_),
    .B(_075_),
    .Y(_076_)
  );
  NAND _349_ (
    .A(_221_),
    .B(_182_),
    .Y(_077_)
  );
  NOT _350_ (
    .A(_184_),
    .Y(_078_)
  );
  NAND _351_ (
    .A(_078_),
    .B(_000_),
    .Y(_079_)
  );
  NAND _352_ (
    .A(_079_),
    .B(_207_),
    .Y(_080_)
  );
  NAND _353_ (
    .A(_080_),
    .B(_077_),
    .Y(_081_)
  );
  NOR _354_ (
    .A(_081_),
    .B(_076_),
    .Y(_082_)
  );
  NOR _355_ (
    .A(_082_),
    .B(_074_),
    .Y(_187_)
  );
  NOR _356_ (
    .A(_208_),
    .B(_191_),
    .Y(_083_)
  );
  NOT _357_ (
    .A(_189_),
    .Y(_084_)
  );
  NOR _358_ (
    .A(_218_),
    .B(_084_),
    .Y(_085_)
  );
  NAND _359_ (
    .A(_221_),
    .B(_188_),
    .Y(_086_)
  );
  NOT _360_ (
    .A(_190_),
    .Y(_087_)
  );
  NAND _361_ (
    .A(_087_),
    .B(_000_),
    .Y(_088_)
  );
  NAND _362_ (
    .A(_088_),
    .B(_207_),
    .Y(_089_)
  );
  NAND _363_ (
    .A(_089_),
    .B(_086_),
    .Y(_090_)
  );
  NOR _364_ (
    .A(_090_),
    .B(_085_),
    .Y(_091_)
  );
  NOR _365_ (
    .A(_091_),
    .B(_083_),
    .Y(_192_)
  );
  NOR _366_ (
    .A(_208_),
    .B(_197_),
    .Y(_093_)
  );
  NOT _367_ (
    .A(_195_),
    .Y(_094_)
  );
  NOR _368_ (
    .A(_218_),
    .B(_094_),
    .Y(_095_)
  );
  NAND _369_ (
    .A(_221_),
    .B(_193_),
    .Y(_096_)
  );
  NOT _370_ (
    .A(_196_),
    .Y(_097_)
  );
  NAND _371_ (
    .A(_097_),
    .B(_000_),
    .Y(_098_)
  );
  NAND _372_ (
    .A(_098_),
    .B(_207_),
    .Y(_099_)
  );
  NAND _373_ (
    .A(_099_),
    .B(_096_),
    .Y(_100_)
  );
  NOR _374_ (
    .A(_100_),
    .B(_095_),
    .Y(_101_)
  );
  NOR _375_ (
    .A(_101_),
    .B(_093_),
    .Y(_198_)
  );
  NOR _376_ (
    .A(_208_),
    .B(_202_),
    .Y(_103_)
  );
  NOT _377_ (
    .A(_200_),
    .Y(_104_)
  );
  NOR _378_ (
    .A(_218_),
    .B(_104_),
    .Y(_105_)
  );
  NAND _379_ (
    .A(_221_),
    .B(_199_),
    .Y(_106_)
  );
  NOT _380_ (
    .A(_201_),
    .Y(_107_)
  );
  NAND _381_ (
    .A(_107_),
    .B(_000_),
    .Y(_108_)
  );
  NAND _382_ (
    .A(_108_),
    .B(_207_),
    .Y(_109_)
  );
  NAND _383_ (
    .A(_109_),
    .B(_106_),
    .Y(_110_)
  );
  NOR _384_ (
    .A(_110_),
    .B(_105_),
    .Y(_111_)
  );
  NOR _385_ (
    .A(_111_),
    .B(_103_),
    .Y(_203_)
  );
  NOR _386_ (
    .A(_208_),
    .B(_212_),
    .Y(_113_)
  );
  NOT _387_ (
    .A(_206_),
    .Y(_114_)
  );
  NOR _388_ (
    .A(_218_),
    .B(_114_),
    .Y(_115_)
  );
  NAND _389_ (
    .A(_221_),
    .B(_204_),
    .Y(_116_)
  );
  NOT _390_ (
    .A(_209_),
    .Y(_117_)
  );
  NAND _391_ (
    .A(_117_),
    .B(_000_),
    .Y(_118_)
  );
  NAND _392_ (
    .A(_118_),
    .B(_207_),
    .Y(_119_)
  );
  NAND _393_ (
    .A(_119_),
    .B(_116_),
    .Y(_120_)
  );
  NOR _394_ (
    .A(_120_),
    .B(_115_),
    .Y(_121_)
  );
  NOR _395_ (
    .A(_121_),
    .B(_113_),
    .Y(_214_)
  );
  NOR _396_ (
    .A(_208_),
    .B(_225_),
    .Y(_123_)
  );
  NOT _397_ (
    .A(_219_),
    .Y(_124_)
  );
  NOR _398_ (
    .A(_218_),
    .B(_124_),
    .Y(_125_)
  );
  NAND _399_ (
    .A(_221_),
    .B(_217_),
    .Y(_126_)
  );
  NOT _400_ (
    .A(_222_),
    .Y(_127_)
  );
  NAND _401_ (
    .A(_127_),
    .B(_000_),
    .Y(_128_)
  );
  NAND _402_ (
    .A(_128_),
    .B(_207_),
    .Y(_129_)
  );
  NAND _403_ (
    .A(_129_),
    .B(_126_),
    .Y(_130_)
  );
  NOR _404_ (
    .A(_130_),
    .B(_125_),
    .Y(_131_)
  );
  NOR _405_ (
    .A(_131_),
    .B(_123_),
    .Y(_227_)
  );
  NOR _406_ (
    .A(_208_),
    .B(_005_),
    .Y(_132_)
  );
  NOT _407_ (
    .A(_231_),
    .Y(_133_)
  );
  NOR _408_ (
    .A(_218_),
    .B(_133_),
    .Y(_134_)
  );
  NAND _409_ (
    .A(_221_),
    .B(_229_),
    .Y(_135_)
  );
  NOT _410_ (
    .A(_002_),
    .Y(_136_)
  );
  NAND _411_ (
    .A(_136_),
    .B(_000_),
    .Y(_137_)
  );
  NAND _412_ (
    .A(_137_),
    .B(_207_),
    .Y(_138_)
  );
  NAND _413_ (
    .A(_138_),
    .B(_135_),
    .Y(_139_)
  );
  NOR _414_ (
    .A(_139_),
    .B(_134_),
    .Y(_140_)
  );
  NOR _415_ (
    .A(_140_),
    .B(_132_),
    .Y(_007_)
  );
  NOR _416_ (
    .A(_208_),
    .B(_017_),
    .Y(_142_)
  );
  NOT _417_ (
    .A(_011_),
    .Y(_143_)
  );
  NOR _418_ (
    .A(_218_),
    .B(_143_),
    .Y(_144_)
  );
  NAND _419_ (
    .A(_221_),
    .B(_009_),
    .Y(_145_)
  );
  NOT _420_ (
    .A(_014_),
    .Y(_146_)
  );
  NAND _421_ (
    .A(_146_),
    .B(_000_),
    .Y(_147_)
  );
  NAND _422_ (
    .A(_147_),
    .B(_207_),
    .Y(_148_)
  );
  NAND _423_ (
    .A(_148_),
    .B(_145_),
    .Y(_149_)
  );
  NOR _424_ (
    .A(_149_),
    .B(_144_),
    .Y(_150_)
  );
  NOR _425_ (
    .A(_150_),
    .B(_142_),
    .Y(_019_)
  );
  NOR _426_ (
    .A(_208_),
    .B(_029_),
    .Y(_151_)
  );
  NOT _427_ (
    .A(_023_),
    .Y(_152_)
  );
  NOR _428_ (
    .A(_218_),
    .B(_152_),
    .Y(_153_)
  );
  NAND _429_ (
    .A(_221_),
    .B(_021_),
    .Y(_154_)
  );
  NOT _430_ (
    .A(_026_),
    .Y(_155_)
  );
  NAND _431_ (
    .A(_155_),
    .B(_000_),
    .Y(_156_)
  );
  NAND _432_ (
    .A(_156_),
    .B(_207_),
    .Y(_157_)
  );
  NAND _433_ (
    .A(_157_),
    .B(_154_),
    .Y(_158_)
  );
  NOR _434_ (
    .A(_158_),
    .B(_153_),
    .Y(_159_)
  );
  NOR _435_ (
    .A(_159_),
    .B(_151_),
    .Y(_031_)
  );
  assign _000_ = s[0];
  assign _001_ = s[1];
  assign _185_ = c[0];
  assign _194_ = d[0];
  assign _216_ = b[0];
  assign _018_ = a[0];
  assign w[0] = _034_;
  assign _044_ = c[1];
  assign _054_ = d[1];
  assign _073_ = b[1];
  assign _092_ = a[1];
  assign w[1] = _102_;
  assign _112_ = c[2];
  assign _122_ = d[2];
  assign _141_ = b[2];
  assign _160_ = a[2];
  assign w[2] = _161_;
  assign _162_ = c[3];
  assign _163_ = d[3];
  assign _164_ = b[3];
  assign _165_ = a[3];
  assign w[3] = _166_;
  assign _167_ = c[4];
  assign _168_ = d[4];
  assign _169_ = b[4];
  assign _170_ = a[4];
  assign w[4] = _171_;
  assign _172_ = c[5];
  assign _173_ = d[5];
  assign _174_ = b[5];
  assign _175_ = a[5];
  assign w[5] = _176_;
  assign _177_ = c[6];
  assign _178_ = d[6];
  assign _179_ = b[6];
  assign _180_ = a[6];
  assign w[6] = _181_;
  assign _182_ = c[7];
  assign _183_ = d[7];
  assign _184_ = b[7];
  assign _186_ = a[7];
  assign w[7] = _187_;
  assign _188_ = c[8];
  assign _189_ = d[8];
  assign _190_ = b[8];
  assign _191_ = a[8];
  assign w[8] = _192_;
  assign _193_ = c[9];
  assign _195_ = d[9];
  assign _196_ = b[9];
  assign _197_ = a[9];
  assign w[9] = _198_;
  assign _199_ = c[10];
  assign _200_ = d[10];
  assign _201_ = b[10];
  assign _202_ = a[10];
  assign w[10] = _203_;
  assign _204_ = c[11];
  assign _206_ = d[11];
  assign _209_ = b[11];
  assign _212_ = a[11];
  assign w[11] = _214_;
  assign _217_ = c[12];
  assign _219_ = d[12];
  assign _222_ = b[12];
  assign _225_ = a[12];
  assign w[12] = _227_;
  assign _229_ = c[13];
  assign _231_ = d[13];
  assign _002_ = b[13];
  assign _005_ = a[13];
  assign w[13] = _007_;
  assign _009_ = c[14];
  assign _011_ = d[14];
  assign _014_ = b[14];
  assign _017_ = a[14];
  assign w[14] = _019_;
  assign _021_ = c[15];
  assign _023_ = d[15];
  assign _026_ = b[15];
  assign _029_ = a[15];
  assign w[15] = _031_;
endmodule

(* src = "StrALU.v:13" *)
module OTRSHIFTER(a, w);
  (* src = "StrALU.v:13" *)
  input [15:0] a;
  (* src = "StrALU.v:13" *)
  output [15:0] w;
  assign w = { a[15], a[15:1] };
endmodule
